<Application
    x:Class="FakeIMC.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:FakeIMC"
    xmlns:materialDesignColors="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
    xmlns:wpf="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Flipper.xaml" />

                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Popupbox.xaml" />





            </ResourceDictionary.MergedDictionaries>

            <Style
                x:Key="Style.PalleteButton"
                BasedOn="{StaticResource MaterialDesignFlatButton}"
                TargetType="Button">

                <Setter Property="Margin" Value="0" />

                <Setter Property="CommandParameter" Value="{Binding}" />

                <Setter Property="VerticalAlignment" Value="Stretch" />

                <Setter Property="HorizontalAlignment" Value="Stretch" />

                <Setter Property="Foreground">

                    <Setter.Value>

                        <SolidColorBrush Color="{Binding ExemplarHue.Foreground, Mode=OneTime}" />

                    </Setter.Value>

                </Setter>

            </Style>

            <Style x:Key="PalettePath" TargetType="Path">

                <Setter Property="Data" Value="M17.5,12A1.5,1.5 0 0,1 16,10.5A1.5,1.5 0 0,1 17.5,9A1.5,1.5 0 0,1 19,10.5A1.5,1.5 0 0,1 17.5,12M14.5,8A1.5,1.5 0 0,1 13,6.5A1.5,1.5 0 0,1 14.5,5A1.5,1.5 0 0,1 16,6.5A1.5,1.5 0 0,1 14.5,8M9.5,8A1.5,1.5 0 0,1 8,6.5A1.5,1.5 0 0,1 9.5,5A1.5,1.5 0 0,1 11,6.5A1.5,1.5 0 0,1 9.5,8M6.5,12A1.5,1.5 0 0,1 5,10.5A1.5,1.5 0 0,1 6.5,9A1.5,1.5 0 0,1 8,10.5A1.5,1.5 0 0,1 6.5,12M12,3A9,9 0 0,0 3,12A9,9 0 0,0 12,21A1.5,1.5 0 0,0 13.5,19.5C13.5,19.11 13.35,18.76 13.11,18.5C12.88,18.23 12.73,17.88 12.73,17.5A1.5,1.5 0 0,1 14.23,16H16A5,5 0 0,0 21,11C21,6.58 16.97,3 12,3Z" />

                <Setter Property="Fill">

                    <Setter.Value>

                        <SolidColorBrush Color="{Binding ExemplarHue.Foreground, Mode=OneTime}" />

                    </Setter.Value>

                </Setter>

            </Style>

            <DataTemplate x:Key="DataTemplate.Swatch" DataType="{x:Type materialDesignColors:Swatch}">

                <wpf:Card Width="120" Margin="2,2,6,6">

                    <Grid>

                        <Grid.RowDefinitions>

                            <RowDefinition Height="Auto" />

                            <RowDefinition Height="Auto" />

                        </Grid.RowDefinitions>

                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="*" />

                            <ColumnDefinition Width="Auto" />

                        </Grid.ColumnDefinitions>

                        <TextBlock
                            Grid.ColumnSpan="2"
                            Margin="8"
                            Text="{Binding Name}" />

                        <Border
                            Grid.Row="1"
                            Grid.Column="0"
                            MinWidth="80">

                            <Border.Background>

                                <SolidColorBrush Color="{Binding ExemplarHue.Color, Mode=OneTime}" />

                            </Border.Background>

                            <Button
                                Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.Skin.ApplyPrimaryCommand, Mode=OneTime}"
                                CommandParameter="{Binding}"
                                Style="{DynamicResource Style.PalleteButton}">

                                <StackPanel Orientation="Horizontal">

                                    <TextBlock Text="Primary" />

                                    <Viewbox Width="16" Height="16">

                                        <Canvas Width="24" Height="24">

                                            <Path Style="{StaticResource PalettePath}" />

                                        </Canvas>

                                    </Viewbox>

                                </StackPanel>

                            </Button>

                        </Border>

                    </Grid>

                </wpf:Card>

            </DataTemplate>

            <Style x:Key="Style.SplashScreen" TargetType="{x:Type Control}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Control}">
                            <Grid Name="Root" Background="Gray">
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="RootTranslate" />
                                </Grid.RenderTransform>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="3*" />
                                </Grid.ColumnDefinitions>
                                <fa:ImageAwesome
                                    Margin="30"
                                    Icon="Spinner"
                                    Spin="True"
                                    SpinDuration="2" />
                                <TextBlock
                                    Grid.Column="1"
                                    Margin="30,0,0,0"
                                    VerticalAlignment="Center"
                                    FontFamily="Andy"
                                    FontSize="90">
                                    Fake IMC
                                </TextBlock>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <EventTrigger RoutedEvent="Loaded">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="Root"
                                                Storyboard.TargetProperty="Opacity"
                                                From="1"
                                                To="0.5"
                                                Duration="0:0:6">
                                                <DoubleAnimation.EasingFunction>
                                                    <ExponentialEase EasingMode="EaseIn" />
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="RootTranslate" Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="00:00:2" Value="0" />
                                                <EasingDoubleKeyFrame KeyTime="00:00:4" Value="1000">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <ExponentialEase EasingMode="EaseOut" />
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Root" Storyboard.TargetProperty="(UIElement.Visibility)">
                                                <DiscreteObjectKeyFrame KeyTime="00:00:5" Value="{x:Static Visibility.Collapsed}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
