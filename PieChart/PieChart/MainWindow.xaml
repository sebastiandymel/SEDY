<Window
    x:Class="PieChart.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:core="clr-namespace:System;assembly=mscorlib"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:local="clr-namespace:PieChart"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    Title="MainWindow"
    Width="800"
    Height="650"
    mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="Style.Path.Base" TargetType="{x:Type Path}">
            <Setter Property="Stroke" Value="White"/>
            <Setter Property="StrokeThickness" Value="2"/>
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform />
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect
                        BlurRadius="3"
                        Direction="270"
                        ShadowDepth="2"
                        Color="Black" />
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.2">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1.2">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <BackEase />
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1.0" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                    <Trigger.Setters>
                        <Setter Property="Effect">
                            <Setter.Value>
                                <DropShadowEffect
                        BlurRadius="6"
                        Direction="270"
                        ShadowDepth="5"
                        Color="Black" />
                            </Setter.Value>
                        </Setter>
                    </Trigger.Setters>
                </Trigger>
                <Trigger Property="local:PathExtensions.IsDimmed" Value="True">
                    <Setter Property="Opacity" Value="0.2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type local:PieChartControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Canvas
                            Name="PART_CANVAS"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SliceStyleSelector">
                <Setter.Value>
                    <local:SliceStyleSelector>
                        <local:IndexBasedSliceStyle Index="0" IsDefault="True">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Red" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="1">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Blue" />
                                <Setter Property="Opacity" Value="0.3" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="2">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Green" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="3">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Orange" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="4">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Gray" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="5">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="DarkCyan" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="6">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="DeepSkyBlue" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="7">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="AntiqueWhite" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="8">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Fill" Value="Lime" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                    </local:SliceStyleSelector>
                </Setter.Value>
            </Setter>
            <Setter Property="OutlineThickness" Value="2" />
            <Setter Property="OutlineBrush" Value="Black" />
        </Style>
        <Style TargetType="{x:Type local:RingChartControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Canvas
                            Name="PART_CANVAS"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="SliceStyleSelector">
                <Setter.Value>
                    <local:SliceStyleSelector>
                        <local:IndexBasedSliceStyle Index="0" IsDefault="True">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Red" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="1">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Blue" />
                                <Setter Property="Opacity" Value="0.3" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="2">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Green" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="3">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Orange" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="4">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Gray" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="5">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="DarkCyan" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="6">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="DeepSkyBlue" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="7">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="AntiqueWhite" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                        <local:IndexBasedSliceStyle Index="8">
                            <Style BasedOn="{StaticResource Style.Path.Base}" TargetType="{x:Type Path}">
                                <Setter Property="Stroke" Value="Black" />
                                <Setter Property="Fill" Value="Lime" />
                            </Style>
                        </local:IndexBasedSliceStyle>
                    </local:SliceStyleSelector>
                </Setter.Value>
            </Setter>
            <Setter Property="OutlineThickness" Value="2" />
            <Setter Property="OutlineBrush" Value="Black" />
        </Style>

    </Window.Resources>
    <WrapPanel>
        <local:PieChartControl
            Width="200"
            Height="200"
            Margin="40">
            <local:PieChartControl.ItemsSource>
                <x:Array Type="{x:Type core:Double}">
                    <core:Double>30.0</core:Double>
                    <core:Double>10.0</core:Double>
                    <core:Double>50.0</core:Double>
                    <core:Double>10.0</core:Double>
                    <core:Double>5.0</core:Double>
                    <core:Double>60.0</core:Double>
                    <core:Double>30.0</core:Double>
                    <core:Double>10.0</core:Double>
                    <core:Double>40.0</core:Double>
                </x:Array>
            </local:PieChartControl.ItemsSource>
        </local:PieChartControl>

        <StackPanel>
            <local:RingChartControl
                Width="220"
                ToolTipFormattingString="Percentage completed: {0}"
                Height="220"
                Margin="40"
                InnerRadius="{Binding ElementName=slider, Path=Value}"
                OutlineThickness="5">
                <local:RingChartControl.ItemsSource>
                    <x:Array Type="{x:Type core:Double}">
                        <core:Double>30.0</core:Double>
                        <core:Double>10.0</core:Double>
                        <core:Double>50.0</core:Double>
                        <core:Double>10.0</core:Double>
                        <core:Double>5.0</core:Double>
                        <core:Double>60.0</core:Double>
                        <core:Double>30.0</core:Double>
                        <core:Double>10.0</core:Double>
                        <core:Double>40.0</core:Double>
                    </x:Array>
                </local:RingChartControl.ItemsSource>
            </local:RingChartControl>

            <Slider
                x:Name="slider"
                Width="200"
                Height="30"
                Value="30"
                Maximum="200"
                Minimum="0" />
        </StackPanel>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <StackPanel VerticalAlignment="Center">
                <Button Command="{Binding Add}" Content="Add" />
                <Button Command="{Binding Remove}" Content="Clear all" />
                <TextBox Text="{Binding SliceValue, UpdateSourceTrigger=PropertyChanged}" />
            </StackPanel>
            <local:PieChartControl
                Grid.Column="1"
                Width="150"
                Height="150"
                Margin="40"
                ItemsSource="{Binding Slices}"
                OutlineThickness="5">
                <i:Interaction.Behaviors>
                    <local:DimOtherBehavior />
                </i:Interaction.Behaviors>
            </local:PieChartControl>
        </Grid>


        <local:PieChartControl
            Width="150"
            Height="150"
            Margin="40"
            OutlineThickness="5">
            <local:PieChartControl.ItemsSource>
                <x:Array Type="{x:Type core:Double}">
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                </x:Array>
            </local:PieChartControl.ItemsSource>

        </local:PieChartControl>

        <local:PieChartControl
            Width="150"
            Height="150"
            Margin="40"
            OutlineThickness="5">
            <local:PieChartControl.ItemsSource>
                <x:Array Type="{x:Type core:Double}">
                    <core:Double>90.0</core:Double>
                    <core:Double>270.0</core:Double>
                </x:Array>
            </local:PieChartControl.ItemsSource>
        </local:PieChartControl>

        <local:PieChartControl
            Width="200"
            Height="200"
            Margin="40"
            OutlineThickness="0">
            <local:PieChartControl.ItemsSource>
                <x:Array Type="{x:Type core:Double}">
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                </x:Array>
            </local:PieChartControl.ItemsSource>
        </local:PieChartControl>


        <local:PieChartControl
            Width="100"
            Height="100"
            Margin="40"
            ItemsSource="10,20,30,40"
            OutlineThickness="5" />

        <local:PieChartControl
            Width="200"
            Height="200"
            Margin="40"
            OutlineBrush="Black"
            OutlineThickness="2">
            <local:PieChartControl.ItemsSource>
                <x:Array Type="{x:Type core:Double}">
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                    <core:Double>90.0</core:Double>
                </x:Array>
            </local:PieChartControl.ItemsSource>
        </local:PieChartControl>

    </WrapPanel>
</Window>
